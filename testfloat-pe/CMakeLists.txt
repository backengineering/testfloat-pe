# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(testfloat-pe)

# Target: testfloat-pe
set(CMKR_TARGET testfloat-pe)
# using /FORCE here because i dont care to fix linker issues LOL
add_link_options("/FORCE" "/DEBUG:FULL" "/LTCG" "/GL")

project(TestGenerator)
set(TEST_NAMES
    ui32_to_f32
    ui32_to_f64
    ui64_to_f32
    ui64_to_f64
    i32_to_f32
    i32_to_f64
    i64_to_f32
    i64_to_f64
    f32_to_f64
    f32_eq
    f32_le
    f32_lt
    f64_eq
    f64_le
    f64_lt
)

foreach(TEST_NAME ${TEST_NAMES})
    add_executable(${TEST_NAME} main_individual_tests.c)
	target_compile_definitions(${TEST_NAME} PRIVATE TESTFLOAT_TEST_NAME="${TEST_NAME}")
	target_include_directories(${TEST_NAME} PRIVATE "../testfloat-lib/include")
	target_link_libraries(${TEST_NAME} PUBLIC testfloat-lib)
endforeach()

set(testfloat-pe_SOURCES
	main.c
	cmake.toml
)

add_executable(testfloat-pe)

target_sources(testfloat-pe PRIVATE ${testfloat-pe_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${testfloat-pe_SOURCES})

target_compile_definitions(testfloat-pe PRIVATE
	HAVE_PLATFORM_H
	SOFTFLOAT_FAST_INT64
	EXTFLOAT80
	FLOAT64
	LONG_DOUBLE_IS_EXTFLOAT80
)

target_compile_options(testfloat-pe PRIVATE
	"/W0"
	"/MP"
	"/GL"
)

target_include_directories(testfloat-pe PRIVATE
	"../testfloat-lib/include"
)

target_link_libraries(testfloat-pe PRIVATE
	testfloat-lib
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT testfloat-pe)
endif()
